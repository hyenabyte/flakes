{
  inputs = {
    nixpkgs.url = "github:nixos/nixpkgs/nixos-unstable";
    devenv.url = "github:cachix/devenv";
    devenv.inputs.nixpkgs.follows = "nixpkgs";

    flake-utils.url = "github:numtide/flake-utils";
    nix-gleam.url = "github:arnarg/nix-gleam";
  };

  nixConfig = {
    extra-trusted-public-keys = "devenv.cachix.org-1:w1cLUi8dv3hnoSPGAuibQv+f9TZLr6cv/Hm9XgU50cw=";
    extra-substituters = "https://devenv.cachix.org";
  };

  outputs = { self, nixpkgs, devenv, nix-gleam, flake-utils, ... } @ inputs:
    flake-utils.lib.eachDefaultSystem (system:
      let
        pkgs = import nixpkgs {
          inherit system;
          overlays = [
            nix-gleam.overlays.default
          ];
        };
      in
      {
        packages = {
          devenv-up = self.devShells.${system}.default.config.procfileScript;
          devenv-test = self.devShells.${system}.default.config.test;

          default = pkgs.buildGleamApplication {
            # https://github.com/arnarg/nix-gleam 
            # The pname and version will be read from the `gleam.toml`
            # file generated by gleam.
            # But this can be overwritten here too:
            # pname = "my-app";
            # version = "1.2.3";

            # The target is read from the `gleam.toml` file too.
            # Default is "erlang" if nothing is specified but
            # this can also be overwritten here too:
            # target = "javascript";

            # Erlang package can be overridden but defaults to
            # `pkgs.erlang`.
            # erlangPackage = pkgs.erlang_nox;

            src = ./.;
          };
        };

        devShells =
          {
            default = devenv.lib.mkShell {
              inherit inputs pkgs;
              modules = [

                {
                  languages.gleam.enable = true;
                  languages.erlang.package = pkgs.erlang_28;
                }

              ];
            };
          };
      });
}
